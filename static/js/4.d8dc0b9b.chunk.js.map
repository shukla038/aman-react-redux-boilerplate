{"version":3,"sources":["Container/HomePage/Pagination.js","Container/HomePage/HomePage.js","Container/HomePage/index.js"],"names":["Pagination","postsPerPage","totalPosts","paginate","pageNumbers","i","Math","ceil","push","style","display","className","map","number","marginLeft","marginRight","key","onClick","href","CardWrapper","styled","figure","PokeDexCard","detailsLink","pokeImage","name","id","window","open","src","HomePage","props","React","useState","pokeDexData","setPokeDexData","pageItemsLimit","useEffect","getPostsListAsync","match","params","pageId","then","res","payload","results","length","Fragment","item","index","url","split","count","pageNumber","history","connect","state","postsList","dispatch","bindActionCreators"],"mappings":"+PA2BeA,EAzBI,SAAC,GAGlB,IAH8D,IAA1CC,EAAyC,EAAzCA,aAAcC,EAA2B,EAA3BA,WAAYC,EAAe,EAAfA,SACxCC,EAAc,GAEXC,EAAI,EAAGA,GAAKC,KAAKC,KAAKL,EAAaD,GAAeI,IACzDD,EAAYI,KAAKH,GAGnB,OACE,6BACE,wBAAII,MAAO,CAACC,QAAQ,QAASC,UAAU,cACpCP,EAAYQ,KAAI,SAAAC,GAAM,OACrB,wBAAIJ,MAAO,CACTK,WAAY,MACZC,YAAa,OACbC,IAAKH,EAAQF,UAAU,aACvB,uBAAGM,QAAS,kBAAMd,EAASU,IAASK,KAAML,EAAQF,UAAU,aACzDE,UCVTM,EAAcC,IAAOC,OAAV,+MAWJC,EAAc,SAAC,GAAiD,EAAhDC,YAAiD,IAApCC,EAAmC,EAAnCA,UAAWC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,GAAkB,uDACzE,OACI,kBAACP,EAAD,CACAF,QAAS,kBAAKU,OAAOC,KAAP,mBAAwBF,MAElC,2BACI,4BAAKD,GACL,yBAAKI,IAAKL,OA+CXM,EA1CE,SAACC,GAAW,IAAD,EACcC,IAAMC,SAAS,IAD7B,mBACjBC,EADiB,KACJC,EADI,OAEYH,IAAMC,SAAS,GAF3B,gCAGoBD,IAAMC,SAAS,KAHnC,mBAGjBG,EAHiB,UAKxBJ,IAAMK,WAAU,WACZN,EAAMO,kBAAkBP,EAAMQ,MAAMC,OAAOC,OAAQL,GAAgBM,MAAK,SAACC,GAAD,OAASR,EAAgBQ,EAAIC,cACpG,IAIL,OAAGV,EAAYW,SAAWX,EAAYW,QAAQC,OAElC,kBAAC,IAAMC,SAAP,KACI,yBAAKpC,UAAU,OAAOe,GAAG,QACrB,wBAAIf,UAAU,WACbuB,EAAYW,QAAQjC,KAAI,SAACoC,EAAMC,GAAP,OACrB,wBAAIjC,IAAKiC,EAAOtC,UAAU,gBAC1B,kBAAC,EAAD,CACAe,GAAIsB,EAAKE,IAAIC,MAAM,KAAK,GACxB1B,KAAMuB,EAAKvB,aAOnB,kBAAC,EAAD,CACIxB,aAAcmC,EACdlC,WAAYgC,EAAYkB,MACxBjD,SArBH,SAAAkD,GAAU,OAAItB,EAAMuB,QAAQ9C,KAAK6C,OA2B1C,gDCnDGE,uBAXS,SAACC,GACrB,MAAO,CACLC,UAAWD,MAGU,SAACE,GACxB,OAAOC,YAAmB,CACtBrB,uBACDoB,KAGQH,CAA6CzB","file":"static/js/4.d8dc0b9b.chunk.js","sourcesContent":["import React from 'react';\n\nconst Pagination = ({ postsPerPage, totalPosts, paginate }) => {\n  const pageNumbers = [];\n\n  for (let i = 1; i <= Math.ceil(totalPosts / postsPerPage); i++) {\n    pageNumbers.push(i);\n  }\n\n  return (\n    <nav>\n      <ul style={{display:'flex'}} className='pagination'>\n        {pageNumbers.map(number => (\n          <li style={{\n            marginLeft: '7px',\n            marginRight: '7px'}}\n            key={number} className='page-item'>\n            <a onClick={() => paginate(number)} href={number} className='page-link'>\n              {number}\n            </a>\n          </li>\n        ))}\n      </ul>\n    </nav>\n  );\n};\n\nexport default Pagination;","import React from 'react';\nimport Header from 'Components/Header'\nimport PropTypes from 'prop-types';\nimport './HomePage.scss';\nimport * as Data from 'Container/HomePage/data';\nimport styled from 'styled-components';\nimport Pagination from './Pagination';\n\nconst CardWrapper = styled.figure`\n    background: #F2F2F2;\n    float: left;\n    display: block;\n    position: relative;\n    border-radius: 5px;\n    width: 100%;\n    padding-top: 100%;\n    cursor: pointer;\n`\n\nexport const PokeDexCard = ({detailsLink, pokeImage, name, id, ...props}) => {\n    return(\n        <CardWrapper\n        onClick={()=> window.open(`/details/${id}`)}\n        >\n            <a>\n                <h1>{name}</h1>\n                <img src={pokeImage} />\n            </a>\n        </CardWrapper>\n    )\n}\nconst HomePage = (props) => {\n    const [pokeDexData, setPokeDexData] = React.useState([]);\n    const [pageOffset, setPageOffset] = React.useState(1);\n    const [pageItemsLimit, setPageItemsLimit] = React.useState(10);\n\n    React.useEffect(() => {\n        props.getPostsListAsync(props.match.params.pageId, pageItemsLimit).then((res) => setPokeDexData( res.payload))\n      }, []);\n\n    const paginate = pageNumber => props.history.push(pageNumber);\n\n    if(pokeDexData.results && pokeDexData.results.length){\n            return (\n                <React.Fragment>   \n                    <div className=\"list\" id=\"list\">\n                        <ul className=\"results\">\n                        {pokeDexData.results.map((item, index)=>\n                            <li key={index} className=\"result-items\">\n                            <PokeDexCard\n                            id={item.url.split(\"/\")[6]}   \n                            name={item.name}\n                            />\n                            </li>\n                        )\n                        }\n                        </ul> \n                    </div>\n                    <Pagination\n                        postsPerPage={pageItemsLimit}\n                        totalPosts={pokeDexData.count}\n                        paginate={paginate}\n                    />\n                </React.Fragment>\n            );\n        }\n        return(\n            <div>Data Not Found</div>\n        ) \n}\nHomePage.propTypes = {\n    getPostsListAsync : PropTypes.func.isRequired\n}\nexport default HomePage;\n\n\n","import { connect } from 'react-redux'\nimport { getPostsListAsync } from './actions'\nimport { bindActionCreators } from 'redux'\nimport HomePage from './HomePage'\n\nconst mapStateToProps = (state) => {\n    return {\n      postsList: state,\n    }\n}\nconst mapDispatchToProps = (dispatch) => {\n    return bindActionCreators({\n        getPostsListAsync\n    }, dispatch)\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePage)"],"sourceRoot":""}